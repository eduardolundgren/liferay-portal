<%--
/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<%@ page import="com.liferay.alloy.util.MarkupUtil" %>

<%
String _iconTypeClass = StringPool.BLANK;

if (Validator.isNull(label) && Validator.isNotNull(icon)) {
	_iconTypeClass = "aui-buttonitem-icon-only";
}
else if (Validator.isNotNull(label) && Validator.isNull(icon)) {
	_iconTypeClass = "aui-buttonitem-label-only";
}

final String CSS_BUTTON_ITEM = MarkupUtil.getClassName("buttonitem");
final String CSS_BUTTON_ITEM_CONTENT = MarkupUtil.getClassName("buttonitem", "content");
final String CSS_BUTTON_ITEM_LABEL = MarkupUtil.getClassName("buttonitem", "label");
final String CSS_BUTTON_ITEM_ICON = MarkupUtil.getClassName("buttonitem", "icon");
final String CSS_BUTTON_ITEM_ICON_TYPE = _iconTypeClass;
final String CSS_COMPONENT = MarkupUtil.getClassName("component");
final String CSS_CUSTOM_ICON = MarkupUtil.getClassName("icon", icon);
final String CSS_ICON = MarkupUtil.getClassName("icon");
final String CSS_STATE_DEFAULT = MarkupUtil.getClassName("state", "default");
final String CSS_TOOLBAR_ITEM = MarkupUtil.getClassName("toolbar", "item");
final String CSS_WIDGET = MarkupUtil.getClassName("widget");

String BOUNDING_BOX_CLASS = StringUtil.merge(new String[] { CSS_WIDGET, CSS_COMPONENT, CSS_BUTTON_ITEM, CSS_BUTTON_ITEM_CONTENT, CSS_STATE_DEFAULT, CSS_BUTTON_ITEM_ICON_TYPE }, StringPool.SPACE);

if (Validator.isNotNull(cssClass)) {
	BOUNDING_BOX_CLASS = StringUtil.merge(new String[] { BOUNDING_BOX_CLASS, (String)cssClass }, StringPool.SPACE);
}
%>